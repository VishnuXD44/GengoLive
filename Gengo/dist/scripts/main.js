import io from"socket.io-client";const configuration={iceServers:[{urls:["stun:stun.l.google.com:19302","stun:stun1.l.google.com:19302"]}]};let localStream=null,remoteStream=null,peerConnection=null,socket=null,currentRoom=null;function showMessage(e,n="info"){const o=document.createElement("div");o.className=`message ${n}-message`,o.textContent=e;const t=document.querySelector(".container");t?t.appendChild(o):document.body.appendChild(o),setTimeout((()=>{o.remove()}),5e3)}function enableControls(){const e=document.getElementById("connect"),n=document.getElementById("language"),o=document.getElementById("role");e&&(e.disabled=!1),n&&(n.disabled=!1),o&&(o.disabled=!1)}function handleConnectionError(){showMessage("Connection failed. Please check your internet connection and try again.","error"),cleanup(),enableControls()}function handleDisconnection(){showMessage("Lost connection. Attempting to reconnect...","warning"),cleanup(),enableControls()}function handleMediaError(){showMessage("Unable to access camera or microphone. Please check your permissions.","error"),enableControls()}async function startLocalStream(){try{const e={video:{width:{ideal:1280},height:{ideal:720}},audio:!0};localStream=await navigator.mediaDevices.getUserMedia(e);const n=document.getElementById("localVideo");return n&&(n.srcObject=localStream,n.classList.add("active"),showMessage("Camera and microphone activated","success")),localStream}catch(e){throw console.error("Error accessing media devices:",e),handleMediaError(),e}}function initializeSocket(){try{console.log("Initializing socket connection");const e="production"===process.env.NODE_ENV?"https://www.gengo.live":"http://localhost:3000",n=io(e,{path:"/socket.io/",transports:["websocket","polling"],reconnection:!0,reconnectionAttempts:5,reconnectionDelay:1e3,timeout:2e4,withCredentials:!0,autoConnect:!0});return n.on("connect",(()=>{console.log("Socket connected successfully:",n.id);const e=document.getElementById("language")?.value,o=document.getElementById("role")?.value;e&&o&&n.emit("join",{language:e,role:o})})),n.on("match",(async e=>{console.log("Matched with peer",e),currentRoom=e.room,e.offer&&await createAndSendOffer()})),n.on("offer",(async e=>{console.log("Received offer"),await handleOffer(e)})),n.on("answer",(async e=>{console.log("Received answer"),await handleAnswer(e)})),n.on("candidate",(async e=>{console.log("Received ICE candidate"),await handleIceCandidate(e)})),n.on("connect_error",(e=>{console.error("Socket connection error:",e),e.message.includes("xhr poll error")&&(console.log("Falling back to websocket only"),n.io.opts.transports=["websocket"],n.connect()),handleConnectionError()})),n}catch(e){return console.error("Socket initialization error:",e),handleConnectionError(),null}}async function initializePeerConnection(){try{return peerConnection=new RTCPeerConnection(configuration),localStream&&localStream.getTracks().forEach((e=>{peerConnection.addTrack(e,localStream)})),peerConnection.ontrack=e=>{const n=document.getElementById("remoteVideo");n&&e.streams[0]&&(n.srcObject=e.streams[0],remoteStream=e.streams[0],showMessage("Connected to peer","success"))},peerConnection.onicecandidate=e=>{e.candidate&&socket&&socket.emit("candidate",e.candidate,currentRoom)},peerConnection.onconnectionstatechange=()=>{console.log("Connection state:",peerConnection.connectionState),"failed"===peerConnection.connectionState&&handleConnectionError()},peerConnection.oniceconnectionstatechange=()=>{console.log("ICE connection state:",peerConnection.iceConnectionState),"disconnected"===peerConnection.iceConnectionState&&handleDisconnection()},peerConnection}catch(e){return console.error("Error creating peer connection:",e),handleConnectionError(),null}}async function createAndSendOffer(){try{const e=await peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});await peerConnection.setLocalDescription(e),socket.emit("offer",e,currentRoom)}catch(e){console.error("Error creating offer:",e),handleConnectionError()}}async function handleOffer(e){try{if(!peerConnection)throw new Error("No peer connection available");await peerConnection.setRemoteDescription(new RTCSessionDescription(e));const n=await peerConnection.createAnswer();await peerConnection.setLocalDescription(n),socket.emit("answer",n,currentRoom)}catch(e){console.error("Error handling offer:",e),handleConnectionError()}}async function handleAnswer(e){try{if(!peerConnection)throw new Error("No peer connection available");await peerConnection.setRemoteDescription(new RTCSessionDescription(e))}catch(e){console.error("Error handling answer:",e),handleConnectionError()}}async function handleIceCandidate(e){try{if(!peerConnection)throw new Error("No peer connection available");await peerConnection.addIceCandidate(new RTCIceCandidate(e))}catch(e){console.error("Error handling ICE candidate:",e),handleConnectionError()}}async function startCall(){try{if(console.log("Starting call process"),await startLocalStream(),console.log("Local stream started"),socket=initializeSocket(),!socket)throw new Error("Failed to initialize socket");if(console.log("Socket initialized"),peerConnection=await initializePeerConnection(),!peerConnection)throw new Error("Failed to initialize peer connection");console.log("Peer connection initialized")}catch(e){throw console.error("Error starting call:",e),handleConnectionError(),e}}function cleanup(){try{localStream&&(localStream.getTracks().forEach((e=>{e.stop(),localStream.removeTrack(e)})),localStream=null),remoteStream&&(remoteStream.getTracks().forEach((e=>{e.stop(),remoteStream.removeTrack(e)})),remoteStream=null),peerConnection&&(peerConnection.close(),peerConnection=null),socket&&(socket.disconnect(),socket=null);const e=document.getElementById("localVideo"),n=document.getElementById("remoteVideo");e&&(e.srcObject=null,e.classList.remove("active")),n&&(n.srcObject=null),currentRoom=null,enableControls()}catch(e){console.error("Error during cleanup:",e)}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("connect");e&&e.addEventListener("click",startCall)})),window.startCall=startCall,window.handleConnectionError=handleConnectionError,window.cleanup=cleanup;