const configuration={iceServers:[{urls:"stun:stun.l.google.com:19302"}]};let localStream,remoteStream,peerConnection;export async function startLocalStream(){try{localStream=await navigator.mediaDevices.getUserMedia({video:!0,audio:!0});const e=document.getElementById("localVideo");return e&&(e.srcObject=localStream),localStream}catch(e){throw console.error("Error accessing media devices:",e),e}}export async function createPeerConnection(){try{peerConnection=new RTCPeerConnection(configuration),localStream&&localStream.getTracks().forEach((e=>{peerConnection.addTrack(e,localStream)})),peerConnection.ontrack=e=>{const t=document.getElementById("remoteVideo");t&&(t.srcObject=e.streams[0],remoteStream=e.streams[0])};const e=await peerConnection.createOffer();return await peerConnection.setLocalDescription(e),e}catch(e){throw console.error("Error creating peer connection:",e),e}}export async function handleOffer(e){try{await peerConnection.setRemoteDescription(new RTCSessionDescription(e));const t=await peerConnection.createAnswer();return await peerConnection.setLocalDescription(t),t}catch(e){throw console.error("Error handling offer:",e),e}}export function handleAnswer(e){return peerConnection.setRemoteDescription(new RTCSessionDescription(e))}export function handleIceCandidate(e){return peerConnection.addIceCandidate(new RTCIceCandidate(e))}export function cleanup(){localStream&&localStream.getTracks().forEach((e=>e.stop())),remoteStream&&remoteStream.getTracks().forEach((e=>e.stop())),peerConnection&&peerConnection.close()}